{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/warnings",
    "plugin:import/typescript"
  ],
  "plugins": [
    "@typescript-eslint/eslint-plugin",
    "eslint-plugin-import"
  ],
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": [
      "./tsconfig.json"
    ],
    "ecmaFeatures": {
      "impliedStrict": true,
      "arrowFunctions": true
    }
  },
  "ignorePatterns": "node_modules",
  "env": {
    "es6": true
  },
  "globals": {
    "tabris": false,
    "$": false,
    "JSX": false,
    "localStorage": false,
    "XMLHttpRequest": false,
    "fetch": false,
    "device": false,
    "ImageData": false,
    "Worker": false,
    "onmessage": true,
    "postMessage": false,
    "console": false,
    "global": false,
    "__dirname": false,
    "setTimeout": false,
    "module": false,
    "createImageBitmap": false,
    "require": false,
    "FormData": false
  },
  "rules": {
    "no-console": [
      "warn",
      {
        "allow": [
          "info",
          "warn",
          "error"
        ]
      }
    ],
    "no-use-before-define": "off",
    "prefer-arrow-callback": [
      "warn",
      {
        "allowNamedFunctions": true,
        "allowUnboundThis": false
      }
    ],
    "no-control-regex": "off",
    "no-unused-vars": "off", // handled by "@typescript-eslint/no-unused-vars"
    "no-multiple-empty-lines": [
      "warn",
      {
        "max": 1
      }
    ],
    "semi": "warn",
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    "indent": [
      "warn",
      2,
      {
        "SwitchCase": 1,
        "FunctionDeclaration": {
          "parameters": "first"
        },
        "FunctionExpression": {
          "parameters": "first"
        },
        "flatTernaryExpressions": false,
        "ignoreComments": false,
        "ignoredNodes": [
          "JSXAttribute" // handled by "react/jsx-indent-props"
        ]
      }
    ],
    "linebreak-style": [
      "warn",
      "unix"
    ],
    "no-trailing-spaces": "warn",
    "space-in-parens": [
      "warn",
      "never"
    ],
    "array-bracket-spacing": [
      "warn",
      "never"
    ],
    "object-curly-spacing": [
      "warn",
      "never"
    ],
    "padded-blocks": [
      "warn",
      {
        "blocks": "never",
        "classes": "always"
      },
      {
        "allowSingleLineBlocks": true
      }
    ],
    "padding-line-between-statements": [
      "warn",
      {
        "blankLine": "any",
        "prev": "*",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": [
          "class",
          "function"
        ],
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "class",
          "function"
        ]
      },
      {
        "blankLine": "always",
        "prev": "import",
        "next": "*"
      },
      {
        "blankLine": "never",
        "prev": "import",
        "next": "import"
      }
    ],
    "space-before-blocks": "warn",
    "space-infix-ops": "warn",
    "space-unary-ops": "warn",
    "max-len": [
      "warn",
      120,
      2,
      {
        "ignoreUrls": true,
        "ignorePattern": "\\/\\^|import"
      }
    ],
    "quotes": [
      "warn",
      "single"
    ],
    "quote-props": [
      "warn",
      "consistent-as-needed"
    ],
    "curly": [
      "warn",
      "all"
    ],
    "eol-last": "warn",
    "no-with": "warn",
    "no-var": "warn",
    "arrow-body-style": [
      "warn",
      "as-needed"
    ],
    "object-shorthand": [
      "warn",
      "always"
    ],
    "prefer-const": "warn",
    "camelcase": "warn",
    "comma-dangle": "warn",
    "dot-notation": "warn",
    "getter-return": "warn",
    "id-match": "warn",
    "new-parens": "warn",
    "no-caller": "warn",
    "no-cond-assign": "off",
    "no-empty": "warn",
    "no-eval": "warn",
    "no-fallthrough": "warn",
    "no-new-wrappers": "warn",
    "no-shadow": "off",
    "no-throw-literal": "warn",
    "no-unused-expressions": "warn",
    "one-var-declaration-per-line": [
      "warn",
      "initializations"
    ],
    "radix": "off",
    "space-before-function-paren": [
      "warn",
      {
        "anonymous": "never",
        "asyncArrow": "always",
        "named": "never"
      }
    ],
    "spaced-comment": "warn",
    "valid-typeof": "off",
    "yoda": "off",
    "jsx-quotes": [
      "warn",
      "prefer-single"
    ],
    "no-invalid-this": "off", // conflicts with TypeScript
    "no-dupe-class-members": "off", // allow overload syntax
    "lines-between-class-members": "off",
    "require-await": "warn",
    "@typescript-eslint/lines-between-class-members": [
      "warn",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "@typescript-eslint/no-inferrable-types": [
      "warn",
      {
        "ignoreParameters": true,
        "ignoreProperties": true
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": [
      "warn",
      {
        "accessibility": "no-public"
      }
    ],
    "@typescript-eslint/prefer-readonly-parameter-types": [
      "off"
    ],
    "@typescript-eslint/no-shadow": [
      "warn"
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/adjacent-overload-signatures": "warn",
    "@typescript-eslint/array-type": [
      "warn",
      {
        "default": "array-simple"
      }
    ],
    "@typescript-eslint/await-thenable": "warn",
    "@typescript-eslint/ban-types": [
      "warn",
      {
        "extendDefaults": false,
        "types": {
          "String": {
            "message": "Use string instead",
            "fixWith": "string"
          },
          "Boolean": {
            "message": "Use boolean instead",
            "fixWith": "boolean"
          },
          "Number": {
            "message": "Use number instead",
            "fixWith": "number"
          },
          "Symbol": {
            "message": "Use symbol instead",
            "fixWith": "symbol"
          },
          "Object": {
            "message": "Use object instead",
            "fixWith": "object"
          }
        }
      }
    ],
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/member-delimiter-style": [
      "warn",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "overrides": {
          "typeLiteral": {
            "multiline": {
              "delimiter": "comma",
              "requireLast": false
            },
            "singleline": {
              "delimiter": "comma",
              "requireLast": false
            }
          }
        }
      }
    ],
    "@typescript-eslint/member-ordering": [
      "warn",
      {
        "default": [
          "public-static-field",
          "protected-static-field",
          "private-static-field",
          "public-static-method",
          "public-field",
          "protected-field",
          "private-field",
          "constructor",
          "public-abstract-method",
          "public-instance-method",
          "protected-abstract-method",
          "protected-instance-method",
          "private-abstract-method",
          "private-instance-method",
          "signature",
          "protected-static-method",
          "private-static-method"
        ]
      }
    ],
    "@typescript-eslint/no-empty-function": "warn",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/no-floating-promises": "warn",
    "@typescript-eslint/no-misused-new": "warn",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "default",
        "format": [
          "camelCase",
          "PascalCase"
        ],
        "filter": {
          "regex": "^-",
          "match": false
        },
        "leadingUnderscore": "allow"
      },
      {
        "selector": "parameter",
        "modifiers": [
          "unused"
        ],
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "require"
      },
      {
        "selector": "variable",
        "modifiers": [
          "const"
        ],
        "types": [
          "boolean",
          "string",
          "number",
          "array"
        ],
        "format": [
          "UPPER_CASE",
          "camelCase"
        ],
        "leadingUnderscore": "forbid"
      },
      {
        "selector": [
          "typeLike",
          "enumMember"
        ],
        "format": [
          "PascalCase"
        ],
        "leadingUnderscore": "forbid"
      }
    ],
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-var-requires": "warn",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/prefer-function-type": "warn",
    "@typescript-eslint/prefer-namespace-keyword": "warn",
    "@typescript-eslint/promise-function-async": [
      "warn",
      {
        "checkArrowFunctions": false
      }
    ],
    "@typescript-eslint/quotes": [
      "warn",
      "single"
    ],
    "@typescript-eslint/semi": [
      "warn",
      "always"
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/triple-slash-reference": "warn",
    "@typescript-eslint/type-annotation-spacing": "warn",
    "@typescript-eslint/unified-signatures": "warn",
    "@typescript-eslint/consistent-type-assertions": [
      "warn",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "allow-as-parameter"
      }
    ],
    "import/default": "off",
    "import/no-relative-parent-imports": "off",
    "import/named": "warn",
    "import/no-useless-path-segments": "warn",
    "import/no-cycle": "warn",
    "import/order": [
      "warn",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "unknown",
          "sibling",
          "parent",
          "index",
          "object"
        ]
      }
    ],
    "import/newline-after-import": "warn",
    "import/prefer-default-export": "off",
    "import/no-default-export": "warn"
  }
}
